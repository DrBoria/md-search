{
  "name": "md-search",
  "version": "0.0.1",
  "displayName": "MD Search",
  "description": "structural search and replace for JavaScript and TypeScript",
  "publisher": "drboria",
  "icon": "media/logo.jpeg",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Other"
  ],
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "activationEvents": [
    "onView:mdSearch.SearchReplaceView",
    "onCommand:mdSearch.replace",
    "onCommand:mdSearch.findInFolder",
    "onCommand:mdSearch.findInFile",
    "onCommand:mdSearch.search",
    "onCommand:mdSearch.clearAllState",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "mdSearch",
      "properties": {
        "mdSearch.showErrorNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show notifications when errors occur in this extension"
        },
        "mdSearch.astxPath": {
          "type": "string",
          "description": "Path to the astx module, eg: ./node_modules/mdSearch."
        },
        "mdSearch.parser": {
          "enum": [
            "babel",
            "babel/auto",
            "recast/babel",
            "recast/babel/auto"
          ],
          "default": "babel",
          "description": "JS/TS parser to use"
        },
        "mdSearch.cacheEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable search results caching for improved performance"
        },
        "mdSearch.cacheExpiration": {
          "type": "integer",
          "default": 900,
          "description": "Number of seconds to keep search results in cache (default: 15 minutes)"
        },
        "mdSearch.maxCacheEntries": {
          "type": "integer",
          "default": 20,
          "description": "Maximum number of search queries to keep in cache"
        },
        "mdSearch.concurrentWorkers": {
          "type": "integer",
          "default": 4,
          "description": "Number of concurrent workers for text search (0 = auto)"
        },
        "mdSearch.prettier": {
          "type": "boolean",
          "default": true,
          "description": "reformat transformed code with prettier"
        },
        "mdSearch.preferSimpleReplacement": {
          "type": "boolean",
          "default": false,
          "description": "Replace using string splicing if possible, instead of regenerating code from modified AST"
        },
        "mdSearch.babelGeneratorHack": {
          "type": "boolean",
          "default": false,
          "description": "Use @babel/generator hack to preserve formatting in transformed code"
        }
      }
    },
    "commands": [
      {
        "command": "mdSearch.restartWorkerPool",
        "title": "MD: Restart Worker Pool"
      },
      {
        "command": "mdSearch.showOutput",
        "title": "MD: Show Debug Output"
      },
      {
        "command": "mdSearch.findInFolder",
        "title": "MD: Find in Folder..."
      },
      {
        "command": "mdSearch.search",
        "title": "MD: Find..."
      },
      {
        "command": "mdSearch.replace",
        "title": "MD: Replace in Files..."
      },
      {
        "command": "mdSearch.findInFile",
        "title": "MD: Find in File..."
      },
      {
        "command": "mdSearch.copyMatches",
        "title": "MD: Copy All Matches"
      },
      {
        "command": "mdSearch.cutMatches",
        "title": "MD: Cut All Matches"
      },
      {
        "command": "mdSearch.pasteToMatches",
        "title": "MD: Paste to All Matches"
      },
      {
        "command": "mdSearch.clearAllState",
        "title": "MD: Clear All Extension State"
      }
    ],
    "keybindings": [
      {
        "command": "mdSearch.findInFile",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "!editorFocus"
      },
      {
        "command": "mdSearch.replace",
        "key": "ctrl+shift+h",
        "mac": "cmd+shift+h",
        "when": "!editorFocus"
      },
      {
        "command": "mdSearch.copyMatches",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "focusedView == mdSearch.SearchReplaceView"
      },
      {
        "command": "mdSearch.cutMatches",
        "key": "ctrl+shift+x",
        "mac": "cmd+shift+x",
        "when": "focusedView == mdSearch.SearchReplaceView"
      },
      {
        "command": "mdSearch.pasteToMatches",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "focusedView == mdSearch.SearchReplaceView"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "explorerResourceIsFolder",
          "command": "mdSearch.findInFolder",
          "group": "mdSearch"
        }
      ],
      "commandPalette": [
        {
          "command": "mdSearch.clearAllState",
          "group": "mdSearch"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "mdSearch-mdSearch",
          "title": "MD Search",
          "icon": "media/mdSearch.svg"
        }
      ]
    },
    "views": {
      "mdSearch-mdSearch": [
        {
          "type": "webview",
          "id": "mdSearch.SearchReplaceView",
          "name": "Search"
        }
      ]
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "lint": "eslint $npm_package_config_lint",
    "lint:fix": "eslint $npm_package_config_lint",
    "prettier": "prettier --write $npm_package_config_prettier",
    "prettier:check": "prettier --list-different $npm_package_config_prettier",
    "clean": "rimraf out",
    "check:types": "tsc --noEmit",
    "build": "npm run clean && npm run build:extension && npm run build:webviews",
    "build:extension": "NODE_ENV=production webpack --config extension.webpack.config.js",
    "watch:extension": "webpack --config extension.webpack.config.js --watch",
    "build:webviews": "NODE_ENV=production webpack --config webviews.webpack.config.js",
    "watch:webviews": "webpack serve --config webviews.webpack.config.js",
    "dev:webviews-debug": "webpack serve --config webviews.webpack.config.js --mode development",
    "test": "rimraf .nyc_output; npm run test:unit && node ./out/extension/test/runTest.js && nyc report && nyc report --reporter=lcov",
    "codecov": "nyc report --reporter=text-lcov > coverage.lcov; codecov",
    "open:coverage": "open coverage/lcov-report/index.html",
    "semantic-release": "semantic-release",
    "build:watch": "nodemon -e js,ts,json --watch src --exec \"(pnpm build)\"",
    "pretest": "BABEL_ENV=coverage npm run build",
    "copy-icon-assets": "mkdir -p out/codicons && cp -r node_modules/@vscode/codicons/dist/* out/codicons/ && mkdir -p out/icons && cp -r node_modules/vscode-icons-js/dist/* out/icons/",
    "prepare-package": "npm run build && npm run copy-icon-assets",
    "package": "npm run prepare-package && vsce package",
    "vscode:prepublish": "pnpm run clean && pnpm run prettier:check && pnpm run lint && pnpm run build"
  },
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      [
        "@semantic-release/exec",
        {
          "prepareCmd": "vsce package 0.0.1 --no-git-tag-version --out md-search-${nextRelease.version}.vsix"
        }
      ],
      [
        "@semantic-release/github",
        {
          "assets": [
            "*.vsix"
          ]
        }
      ]
    ],
    "branches": [
      "master",
      {
        "name": "beta",
        "prerelease": true
      }
    ]
  },
  "vsce": {
    "dependencies": true,
    "yarn": false,
    "bundleIconPaths": [
      "out/fonts/**/*",
      "out/css/**/*",
      "out/images/**/*",
      "out/codicons/**/*",
      "out/icons/**/*",
      "media/**/*"
    ]
  },
  "config": {
    "lint": "--cache --ext .js,.ts src",
    "prettier": ".babelrc.js *.{json,md} {src,test}/**/*.{js,ts}",
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run lint && npm run check:types"
    }
  },
  "lint-staged": {
    "*.{js,ts,json,css,md}": [
      "prettier --write"
    ]
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "nyc": {
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [
      "src/**/*.spec.ts"
    ],
    "require": [
      "@babel/register"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/codemodsquad/md-search.git"
  },
  "keywords": [
    "ast",
    "mdSearch",
    "automated",
    "codemod",
    "find",
    "javascript",
    "match",
    "matching",
    "pattern",
    "refactor",
    "refactoring",
    "replace",
    "rewrite",
    "rewriting",
    "search",
    "semantic",
    "structural",
    "syntax",
    "transform",
    "transformation",
    "typescript"
  ],
  "author": "Mikita Du",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/codemodsquad/md-search/issues"
  },
  "homepage": "https://github.com/codemodsquad/md-search#readme",
  "devDependencies": {
    "@babel/node": "^7.19.1",
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@jedwards1211/commitlint-config": "^1.0.2",
    "@jedwards1211/eslint-config-typescript": "^2.0.2",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/github": "^8.0.6",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "@types/chai": "^4.2.14",
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^7.2.0",
    "@types/lodash": "^4.17.16",
    "@types/lodash-es": "^4.17.6",
    "@types/minimatch": "^5.1.2",
    "@types/mocha": "^8.2.0",
    "@types/node": "^16.9.6",
    "@types/react": "^18.0.18",
    "@types/react-dom": "^18.0.6",
    "@types/react-virtualized-auto-sizer": "^1.0.4",
    "@types/react-window": "^1.8.8",
    "@types/react-window-infinite-loader": "^1.0.9",
    "@types/vscode": "^1.84.0",
    "@types/vscode-webview": "^1.57.3",
    "@types/webpack-env": "^1.18.0",
    "@typescript-eslint/eslint-plugin": "^4.32.0",
    "@typescript-eslint/parser": "^4.32.0",
    "@typescript-eslint/typescript-estree": "^4.32.0",
    "@vscode/vsce": "^3.3.2",
    "babel-plugin-istanbul": "^6.0.0",
    "chai": "^4.2.0",
    "codecov": "^3.8.1",
    "copy": "^0.3.2",
    "copy-webpack-plugin": "^11.0.0",
    "cross-env": "^7.0.3",
    "css-loader": "^6.7.2",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "fs-extra": "^8.1.0",
    "glob": "^7.2.3",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^4.3.8",
    "lint-staged": "^10.5.3",
    "mini-css-extract-plugin": "^2.7.1",
    "mocha": "^8.2.1",
    "nodemon": "^2.0.1",
    "nyc": "^15.1.0",
    "prettier": "^2.2.1",
    "rimraf": "^3.0.2",
    "semantic-release": "^19.0.5",
    "semantic-release-vsce": "^5.1.1",
    "style-loader": "^3.3.1",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.3",
    "vscode-test": "^1.2.3",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0",
    "webpack-dev-server": "^4.11.0"
  },
  "dependencies": {
    "@emotion/css": "^11.10.0",
    "@emotion/styled": "^11.10.4",
    "@repeaterjs/repeater": "^3.0.4",
    "@types/babel__generator": "^7.27.0",
    "@types/debug": "^4.1.12",
    "@types/path-browserify": "^1.0.3",
    "@vscode/codicons": "^0.0.32",
    "@vscode/ripgrep": "^1.15.11",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "astx": "3.0.0-beta.29",
    "babel-parse-wild-code": "^1.2.0",
    "empty": "^0.10.1",
    "file-icons-js": "^1.1.0",
    "gitignore-fs": "^2.1.0",
    "lodash": "^4.17.21",
    "minimatch": "^5.1.0",
    "p-event": "^4.0.0",
    "path-browserify": "^1.0.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-virtualized-auto-sizer": "^1.0.26",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "tiny-typed-emitter": "^2.1.0",
    "vscode-icons-js": "^11.6.1",
    "vscode-material-icons": "^0.1.1",
    "vscode-uri": "^3.1.0"
  }
}
